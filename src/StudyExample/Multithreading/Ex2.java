package StudyExample.Multithreading;

public class Ex2 {
    public static void main(String[] args) {
        /* между этими потоками нет никакой синхронизации, они работают независимо друг от друга
        каждый раз запуская программу у нас будут разные аутпуты, потому что мы не можем знать когда какой
        закончит свою работу

        если бы была синхронизация, сначала выводилось бы 1 , потом 1000, потом 2, потом 999
        наши потоки работают в беспорядочном режиме - тот поток что захватит консоль,тот и выводится
        и на самом деле у нас сейчас не 2, а 3 потока

        поток main был создан автоматом
        от него отпочковался 1 поток, и от мэйна отпочковался 2 поток

         если не overriding run - ничего не будет , почему? потому что ран пустой. + обратить внимание что оверрайдим
         ран, а запускаем его через старт. после того как вызывается старт, автоматом вызывается ран. нужно делать именно
         так, не наоборот

         можно второй класс не использовать,но можно создать два потока у одного и того же класса
        MyThread1 myThread2 = new MyThread1();
 */
        MyThread1 myThread1 = new MyThread1();
        MyThread2 myThread2 = new MyThread2();

        //запускается поток с помощью метода start
        myThread1.start();
        myThread2.start();
    }
}
class MyThread1 extends Thread{
    //в методе run его мы и будем делать override, в него закладывем всю логику которую должен делать наш
    public void run(){
        for (int i = 1; i <= 1000; i++) {
            System.out.println(i);}}}

class MyThread2 extends Thread{
    public void run(){
        for (int i = 1000; i > 0; i--) {System.out.println(i);}}
}