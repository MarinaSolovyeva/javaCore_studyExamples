package StudyExample.Stream;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public class MethodMap {
    public static void main(String[] args) {
        List<String> list = new ArrayList<>();
        list.add("Privet");
        list.add("Poka");
        list.add("OK");
        list.add("Morning");

        //допустим хотим на место этих элементов подставлять их длину
        /*
       старым способом
        for (int i = 0; i < list.size(); i++) {
        list.set (i, String.valueOf (list.get(i).length()));
         */

        List<Integer> list2 = list.stream().map(element -> element.length()).collect(Collectors.toList());
       /* создается стрим путем вызова метода из коллекции, на выходе- поток. не имеет отношения к к чтению из файлов.
         то есть мы из коллекции получили стрим. мэп берет поочерди элемент стрима и
         сопоставляем ему элемент который из него получается после применения тех действий
         которые мы опис внутри метода с помощью лямбда выражения.
         то есть кажд элементу нашего стрима был сопоставлено значение его длины и теперь
         на выходе мэп мы имеем уже другой мэп

         метод мэп принимает инт function, поэтому на инпуте можем дать стринг, а на выходе инт,
        возвращает стрим поэтому не можем присвоить новому или существующему листу!! ведь это поток. мы должны сначала
        преобразовать этот поток в лист, для этого метод collect

        for Не использовали, в методе мэп поочередно каждый элемен будет обработан и преобразован в его длину.

        замечание: все методы стрим не меняют коллекцию или массив! с листом ничего не происходит



*/

        System.out.println(list2); //[6, 4, 2, 7]


        int[] array = {5, 9, 8, 5, 2, 4};
        array = Arrays.stream(array).map(element
                -> {
            if (element % 3 == 0) {
                element = element / 3;
            }
            return element;
        }).toArray();

        System.out.println(Arrays.toString(array));
        /*стрим статический метод аррэйа.с помощью метода стрим преобразовываем стрим в массив,
        а потом уже делаем какие то операции
        а в скобках мэпа пишем то, что мы хотим делать с нашими элементами:
        если элемент делится на 3,то делим, если нет, то ничего


         чтобы преобразовать поток в массив используем метод toArray*/

    }
}